@using System.Security.Claims
@using ArtAuction.Core.Domain.Enums
@model ArtAuction.WebUI.Models.Lot.AuctionLotViewModel

@{
    ViewData["Title"] = "Lot";
}

@{
    var minimalBet = Model.AuctionLot.CurrentPrice + Model.AuctionLot.BidStep;
}

<div class="container-fluid">
    <h1 class="display-4">Lot @Model.AuctionLot.AuctionNumber</h1>
    <input id="auctionNumber" name="auctionNumber" value="@Model.AuctionLot.AuctionNumber" hidden />

    <div class="row">
        <div class="col">
            <img class="rounded float-left img-thumbnail" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.AuctionLot.Image)"
                 alt="@Model.AuctionLot.LotName Photo" style="max-height: 500px;" />
        </div>
        <div class="col">
            <h5>Start Billing Date: @Model.AuctionLot.StartBillingDateTime.ToString("yyyy/MM/dd HH:mm:ss")</h5>
            <h5>End Billing Date: <span id="endBillingDate">@Model.AuctionLot.EndBillingDateTime.ToString("yyyy/MM/dd HH:mm:ss")</span></h5>

            <h6 class="mt-4">Start Price: @Model.AuctionLot.StartPrice.ToString("##.##") $</h6>
            <h6>Current Price: <span id="currentPrice">@Model.AuctionLot.CurrentPrice.ToString("##.##")</span> $</h6>

            @if (Model.AuctionLot.FullPrice != null)
            {
                <h6>Full Price: @Model.AuctionLot.FullPrice.Value.ToString("##.##") $</h6>
            }
            
            @if (User.Identity.IsAuthenticated && User.IsInRole(UserRole.Seller.ToString()))
            {
                <form action="javascript:void(0);" method="POST" onsubmit="placeBet()">
                    <input id="bidSum" name="bidSum" type="number" min="@minimalBet" step="@Model.AuctionLot.BidStep" value="@minimalBet">
                    <input type="submit" class="btn btn-lg btn-secondary" value="Place a Bet">
                </form>

                @if (Model.AuctionLot.FullPrice != null)
                {
                    <form action="javascript:void(0);" method="POST" onsubmit="buyFullPrice()">
                        <input type="submit" class="btn btn-lg btn-success mt-3" value="Buy Full Price: @Model.AuctionLot.FullPrice.Value">
                    </form>
                }
            }

        </div>
    </div>
    <div class="row">
        <h4 class="mt-2 mb-2">Description</h4>
    </div>
    <div class="row">
        <p class="text-justify">
            @Model.AuctionLot.Description
        </p>
    </div>
    <div class="row justify-content-center">
        <partial name="Lot/_LotChatPartial" />
    </div>
</div>



<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<script>
    var connection = new signalR.HubConnectionBuilder().withUrl('/lotPageHub').build();

    connection.on('RefreshChatMessages', function () {
        refreshMessages();
    });

    connection.on('RefreshCurrentPrice', function () {
        refreshCurrentPrice();
        refreshMessages();
    });

    connection
        .start()
        .then(function () {
            var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

            connection.invoke('JoinAuctionLotRoom', auctionNumber);
            connection.invoke('RefreshChatMessages', auctionNumber);
        })
        .catch(function (err) {
            return console.error(err.toString());
        });


    function refreshCurrentPrice() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/RefreshPrice', {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => refreshLotInformation(data))
            .function(error => console.error('Unable to fetch messages', error));
    }

    function refreshLotInformation(lotInfo) {
        var endBillingDate = document.getElementById('endBillingDate');
        var currentPrice = document.getElementById('currentPrice');

        currentPrice.textContent = lotInfo.currentPrice;
        var dateTime = new Date(lotInfo.endBillingDate);
        endBillingDate.textContent = dateTime.toISOString().substr(0, 19).replace('T', ' ').replaceAll('-', '/');

        var betInput = document.getElementById('bidSum');
        var minBet = lotInfo.currentPrice + @Model.AuctionLot.BidStep;
        betInput.minValue = minBet;
        betInput.value = minBet;
    }

    function refreshMessages() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/GetMessages', {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => showMessages(data))
            .function(error => console.error('Unable to fetch messages', error));
    }

    function showMessages(messages) {
        var chat = document.getElementById('chatMessageList');

        while (chat.firstChild) {       // TODO: Refactor for adding only last message
            chat.removeChild(chat.firstChild);
        }

        messages.forEach(message => {
            var login = '@(User?.FindFirst(ClaimTypes.Name)?.Value ?? "")';

            var messageElem = document.createElement('div');
            messageElem.className = 'chat-log__item';

            if (message.isAdmin === true) {
                messageElem.className += ' chat-log__item--admin';
            }

            if (message.userLogin == login) {
                messageElem.className += ' chat-log__item--own';
            }

            var messageHeader = document.createElement('h3');
            messageHeader.className = 'chat-log__author';
            messageHeader.textContent = message.userLogin;

            var messageTime = document.createElement('small');
            messageTime.textContent = '  ' + new Date(message.dateTime).toISOString().substr(0, 19).replace('T', ' ').replaceAll('-', '/');
            messageHeader.appendChild(messageTime);

            var messageTextElem = document.createElement('div');
            messageTextElem.textContent = message.messageText;

            messageElem.appendChild(messageHeader);
            messageElem.appendChild(messageTextElem);
            chat.appendChild(messageElem);
        });
    }

    function sendMessage() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/SendMessage', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Accept': 'application/json; charset=UTF-8',
                'Content-Type': 'application/json; charset=UTF-8'
            },
            body: JSON.stringify({
                AuctionNumber: auctionNumber,
                MessageText: document.getElementById('messageText').value
            })
        })
            .then(document.getElementById('messageText').value = '');
    }

    function placeBet() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/PlaceBet', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Accept': 'application/json; charset=UTF-8',
                'Content-Type': 'application/json; charset=UTF-8'
            },
            body: JSON.stringify({
                AuctionNumber: auctionNumber,
                BidSum: document.getElementById('bidSum').value
            })
        })
        .then(document.getElementById('bidSum').value = '');
    }

    function buyFullPrice() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/BuyFullPrice', {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Accept': 'application/json; charset=UTF-8',
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify({ auctionNumber: auctionNumber })
            });
    }
</script>