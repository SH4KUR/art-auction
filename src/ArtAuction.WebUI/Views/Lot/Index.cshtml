@using System.Security.Claims
@model ArtAuction.WebUI.Models.Lot.AuctionLotViewModel

@{
    ViewData["Title"] = "Lot";
}

<div class="text-center">
    <h1 class="display-4">Lot @Model.AuctionLot.AuctionNumber</h1>
    <input id="auctionNumber" name="auctionNumber" value="@Model.AuctionLot.AuctionNumber" hidden />

    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.AuctionLot.Image)" alt="@Model.AuctionLot.LotName Photo" />
    
    <div>
        <form action="javascript:void(0);" method="POST" onsubmit="placeBet()">
            <input id="bidSum" name="bidSum" type="number" min="@Model.AuctionLot.CurrentPrice" step="@Model.AuctionLot.BidStep">
            <input type="submit" value="Place a Bet">
        </form>
        
        @if (Model.AuctionLot.FullPrice != null)
        {
            <form action="javascript:void(0);" method="POST" onsubmit="buyFullPrice()">
                <input type="submit" value="Buy Full Price: @Model.AuctionLot.FullPrice.Value">
            </form>
        }
    </div>
    
    <partial name="Lot/_LotChatPartial"/>
</div>



<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

<script>
    var connection = new signalR.HubConnectionBuilder().withUrl('/lotPageHub').build();

    connection.on('RefreshChatMessages', function () {
        refreshMessages();
    });

    connection.on('RefreshCurrentPrice', function () {
        refreshCurrentPrice();
        refreshMessages();
    });

    connection
        .start()
        .then(function () {
            var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

            connection.invoke('JoinAuctionLotRoom', auctionNumber);
            connection.invoke('RefreshChatMessages', auctionNumber);
        })
        .catch(function (err) {
            return console.error(err.toString());
        });


    function refreshCurrentPrice() {
        // TODO: Update
    }

    function refreshMessages() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/GetMessages', {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => showMessages(data))
            .function(error => console.error('Unable to fetch messages', error));
    }

    function showMessages(messages) {
        var chat = document.getElementById('chatMessageList');

        while (chat.firstChild) {       // TODO: Refactor for adding only last message
            chat.removeChild(chat.firstChild);
        }

        messages.forEach(message => {
            var login = '@(User?.FindFirst(ClaimTypes.Name)?.Value ?? "")';

            var messageElem = document.createElement('div');
            messageElem.className = 'chat-log__item';

            if (message.userLogin == login) {
                messageElem.className += ' chat-log__item--own';
            }

            var messageHeader = document.createElement('h3');
            messageHeader.className = 'chat-log__author';
            messageHeader.textContent = message.userLogin;

            var messageTime = document.createElement('small');
            messageTime.textContent = message.dateTime;
            messageHeader.appendChild(messageTime);

            var messageTextElem = document.createElement('div');
            messageTextElem.textContent = message.messageText;

            messageElem.appendChild(messageHeader);
            messageElem.appendChild(messageTextElem);
            chat.appendChild(messageElem);
        });
    }

    function sendMessage() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/SendMessage', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Accept': 'application/json; charset=UTF-8',
                'Content-Type': 'application/json; charset=UTF-8'
            },
            body: JSON.stringify({
                AuctionNumber: auctionNumber,
                MessageText: document.getElementById('messageText').value
            })
        })
            .then(document.getElementById('messageText').value = '');
    }

    function placeBet() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/PlaceBet', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Accept': 'application/json; charset=UTF-8',
                'Content-Type': 'application/json; charset=UTF-8'
            },
            body: JSON.stringify({
                AuctionNumber: auctionNumber,
                BidSum: document.getElementById('bidSum').value
            })
        })
        .then(document.getElementById('bidSum').value = '');
    }

    function buyFullPrice() {
        var auctionNumber = parseInt(document.getElementById('auctionNumber').value);

        fetch(auctionNumber + '/BuyFullPrice', {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Accept': 'application/json; charset=UTF-8',
                    'Content-Type': 'application/json; charset=UTF-8'
                },
                body: JSON.stringify({ auctionNumber: auctionNumber })
            });
    }
</script>